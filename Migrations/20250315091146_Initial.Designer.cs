// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_gestorinv.Context;

#nullable disable

namespace backend_gestorinv.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250315091146_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.DetalleMovimiento", b =>
                {
                    b.Property<int>("id_detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalle"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("movimiento_id")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("producto_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_detalle");

                    b.HasIndex("movimiento_id");

                    b.HasIndex("producto_id");

                    b.ToTable("Detalles_Movimiento");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Inventario", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_producto"));

                    b.Property<int?>("categoria_id")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("proveedor_id")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id_producto");

                    b.HasIndex("categoria_id");

                    b.HasIndex("proveedor_id");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.MovimientoInventario", b =>
                {
                    b.Property<int>("id_movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_movimiento"));

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo_movimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("id_movimiento");

                    b.HasIndex("usuario_id");

                    b.ToTable("Movimientos_Inventario");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Proveedor", b =>
                {
                    b.Property<int>("id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_proveedor"));

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_proveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Rol", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("id_usuario");

                    b.HasIndex("rol_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.DetalleMovimiento", b =>
                {
                    b.HasOne("backend_gestorinv.Models.Domain.MovimientoInventario", "movimiento")
                        .WithMany("detalles")
                        .HasForeignKey("movimiento_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_gestorinv.Models.Domain.Inventario", "producto")
                        .WithMany("detalles_movimiento")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("movimiento");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Inventario", b =>
                {
                    b.HasOne("backend_gestorinv.Models.Domain.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoria_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend_gestorinv.Models.Domain.Proveedor", "proveedor")
                        .WithMany("productos")
                        .HasForeignKey("proveedor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.MovimientoInventario", b =>
                {
                    b.HasOne("backend_gestorinv.Models.Domain.Usuario", "usuario")
                        .WithMany("movimientos")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Usuario", b =>
                {
                    b.HasOne("backend_gestorinv.Models.Domain.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("rol");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Inventario", b =>
                {
                    b.Navigation("detalles_movimiento");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.MovimientoInventario", b =>
                {
                    b.Navigation("detalles");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Proveedor", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("backend_gestorinv.Models.Domain.Usuario", b =>
                {
                    b.Navigation("movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
